@page "/students/{id:int}"
@using StudentView.Models
@using StudentView.Services
@inject NavigationManager NavManager


<h3>EditStudent</h3>
<p>@Id</p>
<br />
<br />

<div class="p-5">
    <MudCard>
        <MudForm Model="_student" @ref="@_form">
            <MudCardContent>
                <MudTextField @bind-Value="_student!.FirstName" Label="FirstName"></MudTextField>
                <MudTextField @bind-Value="_student!.LastName" Label="Surename"></MudTextField>
                <MudTextField @bind-Value="_student!.Classroom" Label="Classroom"></MudTextField>

                <MudDatePicker
                    @bind-Date="_student!.Birthday"
                    Mask="@(new DateMask("dd.MM.yyyy"))" Label="Birthday" />
                @* Without Route @rendermode interactive server not work*@

            </MudCardContent>
        </MudForm>
    </MudCard>
</div>
<div class="d-flex m-5 justify-content-end">
    <MudButton Variant="Variant.Filled" Href="/students">Close</MudButton>
    <MudButton Variant="Variant.Filled" OnClick="Update">Save</MudButton>
</div>



@code {

    [Parameter] public int Id { get; set; }

    MudForm _form = new ();

    Student? _student;

    protected override void OnParametersSet()
    {
        _student = MockStudentService.GetStudentById(Id);
        if (_student is null)
            NavManager.NavigateTo("/students");
    }

    void Update()
    {
        if (_form.IsValid)
        {
            // Todo make update
        }

        Console.WriteLine("Update");
    }
}
