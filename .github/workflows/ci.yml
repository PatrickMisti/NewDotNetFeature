name: Build, Test & Publish (GitHub Packages)

on:
  push:
    branches: [ "**" ]
    tags: [ "v*" ]

permissions:
  contents: read
  packages: write

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore
        run: dotnet restore NugetProjects

      - name: Build (Release)
        run: dotnet build NugetProjects --configuration Release --no-restore

      - name: Run Test
        run: dotnet test NugetProjects/Tests/Tests.csproj --configuration Release --no-build

  pack-and-push:
    needs: build-test
    runs-on: ubuntu-latest

    env:
      OWNER: PatrickMisti
      
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-dotnet@v4
        with: { dotnet-version: 9.0.x }

      - name: Read version from version.txt
        id: read_version
        run: echo "version=$(cat NewDotNetFeature/NugetProjects/version.txt)" >> $GITHUB_OUTPUT

      - name: Debug files
        run: ls -R
        
      - name: Debug version
        run: echo "Version is ${{ steps.read_version.outputs.version }}"

      - name: Restore
        run: dotnet restore NugetProjects/FhOoeProjectPackages/FhOoeProjectPackages.csproj

      - name: Pack
        run: |
          dotnet pack NugetProjects/FhOoeProjectPackages/FhOoeProjectPackages.csproj \
            --configuration Release \
            --no-restore \
            -p:PackageVersion=${{ steps.read_version.outputs.version }} \
            -o ./artifacts

      - name: Push to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet nuget push "./artifacts/*.nupkg" \
            --source "https://nuget.pkg.github.com/${{ env.OWNER }}/index.json" \
            --api-key "${GITHUB_TOKEN}" \
            --skip-duplicate
